"Games"
{
	"tf"
	{
		"Signatures"
		{
			"CTFNavMesh::ComputeBlockedArea"
			{
				"library"	"server"
				"linux"		"@_ZN10CTFNavMesh19ComputeBlockedAreasEv"

				// aFuncDoor_0 is there twice with team filter

				"windows"	"\x55\x8B\xEC\x83\xEC\x58\x56\x33\xF6"
			}
			"CFuncNavBlocker::UpdateBlocked"
			{
				"library"	"server"
				"linux"		"@_ZN15CFuncNavBlocker13UpdateBlockedEv"

				// "aWalkedOffOfThe_0"  And its alone.

				"windows"	"\x55\x8B\xEC\x56\x57\x8B\x7D\x08\x8B\xF1\x8B\x06\x3B\x07\x74\x2A\x80\xBE\x64\xF5\xFF\xFF\x00"
			}
			"CBaseCombatWeapon::FinishReload()"
			{
				"library"	"server"
				"linux"		"@_ZN17CBaseCombatWeapon12FinishReloadEv"
				"windows"	"\x55\x8B\xEC\x51\x57\x8B\xF9\x8B\x8F\x90\x05\x00\x00"
			}
			"CObjectSentrygun::Fire"
			{
				"library"	"server"
				"linux"		""
				"windows"	"\x55\x8B\xEC\x81\xEC\x54\x02\x00\x00"
			}
			"CObjectSentrygun::FindTarget"
			{
				"library"	"server"
				"linux"		""
				"windows"	"\x55\x8B\xEC\x81\xEC\xC8\x00\x00\x00\x56\x57\x8B\xF9"
			}
			"CTFPlayer::PlaySpecificSequence"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer20PlaySpecificSequenceEPKc"
				"windows"	"\x55\x8B\xEC\x83\xEC\x30\x53\x56\x8B\x75\x08\x57\x56\x8B\xF9\xE8\x2A\x2A\x2A\x2A\x8B\xD8\x83\xFB\xFF\x74\x2A\x8B\x35\x2A\x2A\x2A\x2A\x8B\xCE\x8B\x16\xFF\x52\x2A\x8B\x8F\x2A\x2A\x2A\x2A\x53\x6A\x13\x8B\x01\xFF\x50"
			}
			"CTFGameMovement::ProcessMovement"
			{
				"library"	"server"
				"linux"		"@_ZN15CTFGameMovement15ProcessMovementEP11CBasePlayerP9CMoveData"
				"windows"	"\x55\x8B\xEC\x56\x57\x8B\x7D\x08\x8B\xF1\x85\xFF\x74\x2A\x53"
			}
			"CTFPlayer::CanAirDash"
			{
				"library"	"server"
				"linux"		"@_ZNK9CTFPlayer10CanAirDashEv"
				"windows"	"\x55\x8B\xEC\x83\xEC\x08\x57\x8B\xF9\xF7\x87\x84\x1A\x00\x00\x00\x00\x04\x00"
			}
			"CTFPlayer::DropAmmoPack"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer12DropAmmoPackERK15CTakeDamageInfobb"
				"windows"	"\x55\x8B\xEC\x83\xEC\x28\x53\x8B\xD9\x56\x33\xF6"
			}
			"CTFPlayer::GetChargeEffectBeingProvided"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer28GetChargeEffectBeingProvidedEv"
				"windows"	"\x55\x8B\xEC\x51\x56\x8B\xF1\x8D\x86\x0C\x21\x00\x00"
			}
			"CTFPlayer::GetMaxAmmo"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer10GetMaxAmmoEii"
				"windows"	"\x55\x8B\xEC\x8B\x45\x0C\x56\x57\x8B\xF9\x83\xF8\xFF\x75\x2A\xFF\xB7\x2A\x2A\x2A\x2A\xEB\x01\x50\xE8"
			}
			"CTFPlayer::IsPlayerClass"
			{
				"library"	"server"
				"linux"		"@_ZNK9CTFPlayer13IsPlayerClassEi"
				"windows"	"\x55\x8B\xEC\x8D\x81\x0C\x21\x00\x00"
			}
			"CTFPlayer::RegenThink"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer10RegenThinkEv"
				"windows"	"\x55\x8B\xEC\x83\xEC\x74\x57\x8B\xF9\x8B\x07"
			}
			"CTFPlayer::RemoveAllOwnedEntitiesFromWorld"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer31RemoveAllOwnedEntitiesFromWorldEb"
				"windows"	"\x55\x8B\xEC\x56\x8B\xF1\xE8\x2A\x2A\x2A\x2A\xA1\x2A\x2A\x2A\x2A"
			}
			"CTFPlayer::Taunt"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer5TauntE8taunts_ti"
				"windows"	"\x55\x8B\xEC\x81\xEC\xD4\x00\x00\x00\x53\x56\x57\x8B\xF9\xE8"
			}
			"HandleRageGain"
			{
				"library"	"server"
				"linux"		"@_Z14HandleRageGainP9CTFPlayerjff"
				"windows"	"\x55\x8B\xEC\x56\x8B\x75\x08\x85\xF6\x0F\x84\x2A\x2A\x2A\x2A\x53"
			}
			"CBaseEntity::SetLocalOrigin" // String aBadSetlocalori,   Bad SetLocalOrigin(%f,%f,%f) on %s\n
			{
				"library"	"server"
				"linux"		"@_ZN11CBaseEntity14SetLocalOriginERK6Vector"
				"windows"	"\x55\x8B\xEC\xF3\x0F\x10\x0D\x2A\x2A\x2A\x2A\x83\xEC\x10\x0F\x28\xC1\x0F\x57\x05\x2A\x2A\x2A\x2A\x56\x8B\x75\x08\x57\x8B\xF9\xF3\x0F\x10\x16\x0F\x2F\xD0\x0F\x86\x2A\x2A\x2A\x2A\x0F\x2F\xCA\x0F\x86\x2A\x2A\x2A\x2A\xF3\x0F\x10\x56\x04\x0F\x2F\xD0\x0F\x86\x2A\x2A\x2A\x2A\x0F\x2F\xCA\x0F\x86\x2A\x2A\x2A\x2A\xF3\x0F\x10\x56\x08\x0F\x2F\xD0\x0F\x86\x2A\x2A\x2A\x2A\x0F\x2F\xCA\x0F\x86\x2A\x2A\x2A\x2A\x8B\x06\x89\x45\xF0\xF3\x0F\x10\x45\xF0\x0F\x2E\x87\x18\x03\x00\x00"
			}
			"CBaseEntity::SetLocalAngles" // Basically the same as the top
			{
				"library"	"server"
				"linux"		"@_ZN11CBaseEntity14SetLocalAnglesERK6QAngle" 
				"windows"	"\x55\x8B\xEC\xF3\x0F\x10\x0D\x2A\x2A\x2A\x2A\x83\xEC\x10\x0F\x28\xC1\x0F\x57\x05\x2A\x2A\x2A\x2A\x56\x8B\x75\x08\x57\x8B\xF9\xF3\x0F\x10\x16\x0F\x2F\xD0\x0F\x86\x2A\x2A\x2A\x2A\x0F\x2F\xCA\x0F\x86\x2A\x2A\x2A\x2A\xF3\x0F\x10\x56\x04\x0F\x2F\xD0\x0F\x86\x2A\x2A\x2A\x2A\x0F\x2F\xCA\x0F\x86\x2A\x2A\x2A\x2A\xF3\x0F\x10\x56\x08\x0F\x2F\xD0\x0F\x86\x2A\x2A\x2A\x2A\x0F\x2F\xCA\x0F\x86\x2A\x2A\x2A\x2A\x8B\x06\x89\x45\xF0\xF3\x0F\x10\x45\xF0\x0F\x2E\x87\x24\x03\x00\x00"
			}
			"CTFBaseBoss::BossThink" // "damage"
			{
				"library"	"server"
				"linux"		"@_ZN11CTFBaseBoss9BossThinkEv" 
				"windows"	"\x55\x8B\xEC\x81\xEC\xA4\x05\x00\x00"
			}
			"CBaseEntity::SetAbsOrigin" // String models/airboat.mdl, look up, first call
			{
				"library"	"server"
				"linux"		"@_ZN11CBaseEntity12SetAbsOriginERK6Vector"
				"windows"	"\x55\x8B\xEC\x83\xEC\x40\x56\x57\x8B\xF1"
			}
			"CBaseEntity::SetAbsAngles" // String models/airboat.mdl, look up, 2nd call
			{
				"library"	"server"
				"linux"		"@_ZN11CBaseEntity12SetAbsAnglesERK6QAngle"
				"windows"	"\x55\x8B\xEC\x83\xEC\x70\x53\x56\x8B\xF1"
			}
			"CBaseAnimating::InvalidateBoneCache"// Void CBaseCombatCharacter::Weapon_Drop, Big function with 11 calls, the 5th one from top, very small function
			{
				"library"	"server"
				"linux"		"@_ZN14CBaseAnimating19InvalidateBoneCacheEv"
				"windows"	"\xFF\xB1\x40\x04\x00\x00" //Suspiciously small.
			}
			"CTFProjectile_HealingBolt::ImpactTeamPlayer()"
			{
				// x-ref "Weapon_Arrow.ImpactFleshCrossbowHeal" in branching function
				"library"	"server"
				"linux"		"@_ZN25CTFProjectile_HealingBolt16ImpactTeamPlayerEP9CTFPlayer"
				"windows"	"\x55\x8B\xEC\x83\xEC\x10\x56\x57\x8B\x7D\x08\x8B\xF1\x89\x75\xF0"
			}
			"CTFProjectile_Arrow::Create" //both tf_projectile_grapplinghook and tf_projectile_arrow in the same function.
			{
				"library"	"server"
				"linux"		"@_ZN19CTFProjectile_Arrow6CreateERK6VectorRK6QAngleff16ProjectileType_tP11CBaseEntityS8"
				"windows"	"\x55\x8B\xEC\x56\x8B\x75\x18\x57\x83\xFE\x0B"
			}
			"CTFGrenadePipebombProjectile::Create" //both tf_projectile_pipe_remote and tf_projectile_pipe in the same function.
			{
				"library"	"server"
				"linux"		"@_ZN28CTFGrenadePipebombProjectile6CreateERK6VectorRK6QAngleS2_S2_P20CBaseCombatCharacterRK13CTFWeaponInfoif"
				"windows"	"\x55\x8B\xEC\x8B\x45\x20\x53"
			}
			"CObjectDispenser::MakeCarriedObject" //offset aBuildingDispen ; "Building_Dispenser.Idle"  one with 5 calls, most bottom one should have "player_carryobject" and "userid"
			{
				"library"	"server"
				"linux"		"@_ZN11CBaseObject17MakeCarriedObjectEP9CTFPlayer"
				"windows"	"\x55\x8B\xEC\x56\x8B\xF1\x8B\x8E\xE0\x0A\x00\x00"
			}
			"CObjectSentrygun::MakeCarriedObject" // offset aPlayerCarryobj , with "userid" and "object" go up and find Xref, find the one with only 2 calls and no strings.
			{
				"library"	"server"
				"linux"		"@_ZN16CObjectSentrygun17MakeCarriedObjectEP9CTFPlayer"
				"windows"	"\x55\x8B\xEC\x56\x8B\xF1\x80\xBE\xD8\x0A\x00\x00\x00"
			}
			"CTFPlayerShared::Disguise" // offset aModDisguiseCon
			{
				"library"	"server"
				"linux"		"@_ZN15CTFPlayerShared8DisguiseEiiP9CTFPlayerb"
				"windows"	"\x55\x8B\xEC\x83\xEC\x24\x56\x57\x8B\xF9\x8B\x8F\x90\x01\x00\x00"
			}
			"CBaseCombatWeapon::WeaponSound" //CBaseCombatWeapon::WeaponSound(WeaponSound_t, float)
			{
				// void CBaseCombatWeapon::WeaponSound( WeaponSound_t sound_type, float soundtime /* = 0.0f */ ) There is alot to this.
				// Incase the signature is needed \x55\x8B\xEC\x81\xEC\xC4\x00\x00\x00\x56\x8B\xF1\x80\xBE\x34\x06\x00\x00\x00
				// How i got it: find _ZN11CBaseEntity19m_pPredictionPlayerE ; CBaseEntity::m_pPredictionPlayer
				// Reverse it in CStudioHdr::CActivityToSequenceMapping::SelectWeightedSequence
				//Then just find with something like cmp     dword_1096D9DC, 0
				//then find the function where its called 3 times.
				"linux"		""
				"windows"	"\x55\x8B\xEC\x81\xEC\xC4\x00\x00\x00\x56\x8B\xF1\x80\xBE\x34\x06\x00\x00\x00"
			}


		}
		"Functions"
		{
			"CBaseGrenade::Explode"
			{
				"offset"	"CBaseGrenade::Explode"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"pTrace"
					{
						"type"	"objectptr"
					}
					"bitsDamageType"
					{
						"type"	"int"
					}
				}
			}
			"CTFBaseBoss::BossThink"
           		{
              		 	"signature"    	"CTFBaseBoss::BossThink"
             	   		"callconv"    	"thiscall"
             	  		"return"    	"void"
             	 		"this"        	"entity"
           		}
			"CObjectSentrygun::Fire"
			{
				"signature"	"CObjectSentrygun::Fire"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
			}
			"CObjectSentrygun::FindTarget"
			{
				"signature"	"CObjectSentrygun::FindTarget"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
			}
			"CBasePlayer::ForceRespawn"
			{
				"offset"	"CBasePlayer::ForceRespawn"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CGameRules::FrameUpdatePostEntityThink"
			{
				"offset"	"CGameRules::FrameUpdatePostEntityThink"
				"hooktype"	"gamerules"
				"return"	"void"
				"this"		"ignore"
			}
			"CTFGameMovement::ProcessMovement"
			{
				"signature"	"CTFGameMovement::ProcessMovement"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"ignore"
				"arguments"
				{
					"player"
					{
						"type"	"cbaseentity" // CBasePlayer *
					}
					"mv"
					{
						"type"	"objectptr" // CMoveData *
					}
				}
			}
			"CTFPlayerShared::Disguise"
			{
				"signature"	"CTFPlayerShared::Disguise"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"ignore"
			}
			"CTFPlayer::CanAirDash"
			{
				"signature"	"CTFPlayer::CanAirDash"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
			}
			"CTFProjectile_HealingBolt::ImpactTeamPlayer()"
			{
				"signature"		"CTFProjectile_HealingBolt::ImpactTeamPlayer()"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
				"arguments"
				{
					"target"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CTFPlayer::DropAmmoPack"
			{
				"signature"	"CTFPlayer::DropAmmoPack"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"info"
					{
						"type"	"objectptr"
						"flags"	"byref"
					}
					"bEmpty"
					{
						"type"	"bool"
					}
					"bDisguisedWeapon"
					{
						"type"	"bool"
					}
				}
			}
			"CTFPlayer::GetChargeEffectBeingProvided"
			{
				"signature"	"CTFPlayer::GetChargeEffectBeingProvided"
				"callconv"	"thiscall"
				"return"	"int"
				"this"		"entity"
			}
			"CTFPlayer::GetMaxAmmo"
			{
				"signature"	"CTFPlayer::GetMaxAmmo"
				"callconv"	"thiscall"
				"return"	"int"
				"this"		"entity"
				"arguments"
				{
					"iAmmoIndex"
					{
						"type"	"int"
					}
					"iClassNumber"
					{
						"type"	"int"
					}
				}
			}
			"CTFPlayer::IsPlayerClass"
			{
				"signature"	"CTFPlayer::IsPlayerClass"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"iClass"
					{
						"type"	"int"
					}
				}
			}
			"CTFPlayer::RegenThink"
			{
				"signature"	"CTFPlayer::RegenThink"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
			}
			"CTFPlayer::RemoveAllOwnedEntitiesFromWorld"
			{
				"signature"	"CTFPlayer::RemoveAllOwnedEntitiesFromWorld"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"bExplodeBuildings"
					{
						"type"	"bool"
					}
				}
			}
			"CTFPlayer::Taunt"
			{
				"signature"	"CTFPlayer::Taunt"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"taunts_t"
					{
						"type"	"int"
					}
					"int"
					{
						"type"	"int"
					}
				}
			}
			"HandleRageGain"
			{
				"signature"	"HandleRageGain"
				"callconv"	"cdecl"
				"return"	"void"
				"this"		"ignore"
				"arguments"
				{
					"pPlayer"
					{
						"type"	"cbaseentity"
					}
					"iRequiredBuffFlags"
					{
						"type"	"int"
					}
					"flDamage"
					{
						"type"	"float"
					}
					"fInverseRageGainScale"
					{
						"type"	"float"
					}
				}
			}
			"CTFParticleCannon::FireChargedShot"
            		{
                		"offset"    	"CTFParticleCannon::FireChargedShot"
                		"hooktype"    	"entity"
               	 		"return"    	"void"
                		"this"        	"entity"
            		}
			"CBaseCombatWeapon::FinishReload()"
			{
				"signature"		"CBaseCombatWeapon::FinishReload()"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
			}
			"CTFWeaponBase::FinishReload()"
			{
				"offset"		"CTFWeaponBase::FinishReload()"
				"hooktype"		"entity"
				"return"		"void"
				"this"			"entity"
			}
			"CBaseCombatWeapon::Reload()"
			{
				"offset"		"CBaseCombatWeapon::Reload()"
				"hooktype"		"entity"
				"return"		"void"
				"this"			"entity"
			}
			"CTFBaseRocket::Explode"
			{
				"offset"	"CTFBaseRocket::Explode"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"pTrace"
					{
						"type"	"objectptr"
					}
					"pEntity"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CTFProjectile_SpellFireball::Explode"
			{
				"offset"	"CTFProjectile_SpellFireball::Explode"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"pTrace"
					{
						"type"	"objectptr"
					}
				}
			}
			"CTFProjectile_Rocket::RocketTouch"
			{
				"offset"	"CTFProjectile_Rocket::RocketTouch"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"pEntity"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CWeaponMedigun::PrimaryAttack()"
			{
				"offset"	"CWeaponMedigun::PrimaryAttack()"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CTFBot::Event_Killed()"
			{
				"offset"	"CTFBot::Event_Killed()"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}

		}
		"Offsets"
		{
			"CEconItemView::IterateAttributes"
			{
				"windows"	"18"
				"linux"		"19"
			}
			"CTFBot::Event_Killed()"
			{
				"windows"	"66"
				"linux"		"67"
			}
			"CWeaponMedigun::PrimaryAttack()"
			{
				"windows"	"283"
				"linux"		"289"
			}
			"CTFWeaponBase::FinishReload()"
			{
				"windows"	"278"
				"linux"		"284"
			}
			"CBaseCombatWeapon::Reload()"
			{
				"windows"	"280"
				"linux"		"286"
			}
			"CBaseObject::MakeCarriedObject"	//CBaseObject::MakeCarriedObject(CTFPlayer *)
			{
				"windows"	"384"
				"linux"		"386"
			}
			"CBasePlayer::EquipWearable"
			{
				"linux"		"436"
				"windows"	"435"
			}
			"CTFPlayerAnimState::DoAnimationEvent" //(PlayerAnimEvent_t, int)
			{
				"linux"		"3"
				"windows"	"2"
			}
			"CTFPlayerAnimState::Update"	//(float, float)
			{
				"linux"		"4"
				"windows"	"5"
			}
			"CPlayerInfo::GetLocalOrigin"	//(float)
			{
				"linux"		"3"
				"windows"	"3"
			}
			"CPlayerInfo::GetLocalAngles"	//(float)
			{
				"linux"		"5"
				"windows"	"5"
			}
			"CBasePlayer::ForceRespawn"
			{
				"linux"		"334"
				"windows"	"333"
			}
			"CGameRules::FrameUpdatePostEntityThink"
			{
				"linux"		"16"
				"windows"	"15"
			}
			"CBaseEntity::GetVectors"
			{
				"windows"	"139"
				"linux"		"140"
			}
			"CTFParticleCannon::FireChargedShot"
			{
				"windows"	"487"
				"linux"		"494"
			}
			"CBaseGrenade::Explode"
			{
				"linux"		"233"
				"windows"	"232"
			}
			"CTFBaseRocket::Explode"
			{
				"linux"		"237"
				"windows"	"236"
			}
			"CTFProjectile_SpellFireball::Explode"
			{
				"linux"		"247"
				"windows"	"244"
			}
			"CTFProjectile_Rocket::RocketTouch"
			{
				"linux"		"236"
				"windows"	"235"
			}
			"WeaponData_t::m_nDamage"
			{
				"linux"		"1784"
				"windows"	"1784"
			}
			"WeaponData_t::m_flPunchAngle"
			{
				"linux"		"1800"
				"windows"	"1800"
			}
			"CTFWeaponBase::m_iWeaponMode"
			{
				"linux"		"1704"
				"windows"	"1700"
			}
			"CTFWeaponBase::m_pWeaponInfo"
			{
				"linux"		"1716"
				"windows"	"1712"
			}
		}
		"Addresses"
		{
			"ProcessMovement"
			{
				"linux"
				{
					"signature"	"CTFGameMovement::ProcessMovement"
					"offset"	"84"
				}
				"windows"
				{
					"signature"	"CTFGameMovement::ProcessMovement"
					"offset"	"70"
				}
			}
		}
	}
}